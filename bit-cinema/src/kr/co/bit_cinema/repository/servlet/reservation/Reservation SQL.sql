

   
-- 현재 상영중인 영화(이름순)
SELECT DISTINCT M.MOVIE_NAME, M.MOVIE_ID
  FROM SCHEDULE S
INNER JOIN MOVIES M
   ON S.MOVIE_ID = M.MOVIE_ID
order by M.MOVIE_NAME;
   
   
   
-- 현재 상영중인 영화(예매순)
SELECT DISTINCT M.MOVIE_NAME, M.MOVIE_ID--, R.R_NUMBERS -- order by에서 사용한 컬럼은 반드시 써줘야 하는듯?
  FROM SCHEDULE S
INNER JOIN MOVIES M
   ON S.MOVIE_ID = M.MOVIE_ID
INNER JOIN RESER_ORDER R
   ON M.MOVIE_ID = R.MOVIE_ID
ORDER BY R_NUMBERS DESC;

   
   
-- 현재 상영중인 영화(평점순)
-- 일단 패스




-- 날짜 선택(선택한 영화의 시작날짜 구하기)
SELECT S.START_DATE, S.START_TIME
  FROM SCHEDULE S
INNER JOIN MOVIES M
   ON S.MOVIE_ID = M.MOVIE_ID
WHERE M.MOVIE_ID = 1 -- 여기 값은 동적으로(이전 페이지에서 영화 고르고 해당 값이 넘어온다)
order by S.START_DATE;
-- 네이버 영화 예매 프로세스 참고
-- 일단 오늘 날짜부터 일주일치 뿌려주고, 해당 날짜에 스케쥴 없으면, 날짜버튼 비활성화시킴



-- 지역 선택(선택한 날짜기준, 해당 영화가 이미 상영중인 지역만)
SELECT DISTINCT A.LOCATION_NAME, A.LOCATION_ID
  FROM SCHEDULE SCH
 INNER JOIN SCREEN SCRN
   ON SCH.SCREEN_ID = SCRN.SCREEN_ID AND SCH.THEATER_ID = SCRN.THEATER_ID
 INNER JOIN THEATER T
   ON T.THEATER_ID = SCRN.THEATER_ID
 INNER JOIN AREAS A
   ON T.LOCATION_ID = A.LOCATION_ID
WHERE SCH.MOVIE_ID = 3; -- 동적으로!
  --AND SCH.START_DATE < TO_DATE('2017-05-29','YYYY-MM-DD');


-- 있는 지역 다 불러오기(TEMP)
SELECT LOCATION_NAME
  FROM AREAS
 ORDER BY LOCATION_NAME;



-- 극장 선택 (선택한 지역으로 제한)
SELECT DISTINCT T.THEATER_NAME, T.THEATER_ID
  FROM SCHEDULE SCH
 INNER JOIN SCREEN SCR
   ON SCH.SCREEN_ID = SCR.SCREEN_ID AND SCH.THEATER_ID = SCR.THEATER_ID
 INNER JOIN THEATER T
   ON T.THEATER_ID = SCR.THEATER_ID
-- INNER JOIN AREAS A
--   ON T.LOCATION_ID = A.LOCATION_ID
WHERE SCH.MOVIE_ID = 3 
  AND T.LOCATION_ID = 2;
  --AND SCH.START_DATE < TO_DATE('2017-05-29','YYYY-MM-DD');



-- 시간 선택(선택한 극장에서 선택한 영화의 모든 스케쥴 뽑기)
SELECT SCH.SCHEDULE_ID, SCR.SCREEN_NAME, SCH.START_TIME, SCH.END_TIME--, SCH.MOVIE_ID
  FROM SCHEDULE SCH
 INNER JOIN SCREEN SCR
   ON SCH.SCREEN_ID = SCR.SCREEN_ID
WHERE SCH.MOVIE_ID = 1
  AND SCR.THEATER_ID = 1
  AND SCH.START_DATE = TO_DATE('2017/06-06', 'YYYY/MM-DD');
 


-- 좌석 선택(모든 좌석 체크박스로 뿌린 후, 자바스크립트로 예약된 좌석 체크박스 비활성화 시키기)
--(선택갯수 제한도 자바스크립트로 할듯?)
-- 해당 스케쥴의 모든 좌석 뽑기
SELECT S.SEAT_ID, S.R, S.C
  FROM SCHEDULE SCH
 INNER JOIN SCREEN SCR
   ON SCH.SCREEN_ID = SCR.SCREEN_ID AND SCH.THEATER_ID = SCR.THEATER_ID
 INNER JOIN SEATS S
    ON SCR.SCREEN_ID = S.SCREEN_ID AND SCR.THEATER_ID = S.THEATER_ID
-- INNER JOIN RESERVATIONS R
  --  ON R.SCHEDULE_ID = SCH.SCHEDULE_ID
 WHERE SCH.SCHEDULE_ID = 1;
   
-- 해당 스케쥴에서 예약된 자석만 뽑기
SELECT S.SEAT_ID, S.R, S.C
  FROM RESERVATIONS R
 INNER JOIN R_SEATS RS
    ON R.RESERVATION_ID = RS.RESERVATION_ID
 INNER JOIN SEATS S
    ON S.SEAT_ID = RS.SEAT_ID
 WHERE R.SCHEDULE_ID = 1;
-- 아우터 조인(null 값때문에 필요)




-- 좌석 예약 하기
INSERT INTO RESERVATIONS(RESERVATION_ID, REG_DATE, SCHEDULE_ID, MEMBER_ID, R_COUNT)
                 VALUES (S_RESERVATION_ID.NEXTVAL, SYSDATE, 1, 'fam1', 2);
-- 두 좌석 예약 케이스
INSERT INTO R_SEATS(RESERVATION_ID, SEAT_ID)
             VALUES(1111, 31);
INSERT INTO R_SEATS(RESERVATION_ID, SEAT_ID)
             VALUES(1111, 32);

-- 예매 취소
-- 아무래도 예매 취소 컬럼 추가해야 할듯. 예매취소 내역 확인위해서..
  
  
  
-- 예약 확인(영화 이름)
SELECT M.MOVIE_NAME
  FROM RESERVATIONS R
 INNER JOIN SCHEDULE S
    ON S.SCHEDULE_ID = R.SCHEDULE_ID
 INNER JOIN MOVIES M
    ON S.MOVIE_ID = M.MOVIE_ID
 WHERE R.RESERVATION_ID = 1;

-- 예약 확인(상영관 이름, 예약한 날짜, 시작시간, 끝시간) 
SELECT SCR.SCREEN_NAME, R.REG_DATE, SCH.START_TIME, SCH.END_TIME --, R.RESERVATION_ID
  FROM RESERVATIONS R
 INNER JOIN SCHEDULE SCH
    ON SCH.SCHEDULE_ID = R.SCHEDULE_ID
 INNER JOIN SCREEN SCR
    ON SCH.SCREEN_ID = SCH.SCREEN_ID AND SCH.THEATER_ID = SCR.THEATER_ID -- 키가 쌍으로 있음
 WHERE R.RESERVATION_ID = 1
   AND SCH.SCREEN_ID = SCR.SCREEN_ID;

-- 예약 확인(자리수, 자리위치)
SELECT R.R_COUNT, S.R, S.C
  FROM RESERVATIONS R
 INNER JOIN R_SEATS RS
    ON R.RESERVATION_ID = RS.RESERVATION_ID
 INNER JOIN SEATS S
    ON S.SEAT_ID = RS.SEAT_ID
 WHERE R.RESERVATION_ID = 1;








