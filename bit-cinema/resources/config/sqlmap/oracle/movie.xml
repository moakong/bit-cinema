<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="kr.co.bit_cinema.repository.mapper.MovieMapper">
	
	<update id="loadMovie" parameterType="Movie">
		update movies
		   set movie_name = #{movieName},
		   	   eng_title = #{engTitle},
			   release_date = #{releaseDate}, 
			   runtime = #{runtime}, 
			   certificate = #{certificate},
			   story = #{story},
			   flag = 1
		 where movie_id = #{movieId}
	</update>
	
	<insert id="loadGenre" parameterType="Genre">
		insert into genres(movie_id, genre)
		values(#{movieId}, #{genre})
	</insert>
	
	<insert id="loadThumb" parameterType="Photo">
		insert into photos(movie_id, route, type)
		values(#{movieId}, #{route}, #{type})
	</insert>
	
	<insert id="loadPhoto" parameterType="Photo">
		insert into photos(movie_id, route)
		values(#{movieId}, #{route})
	</insert>
	
	<select id="selectTitle" parameterType="int" resultType="Movie">
		select movie_id as movieId, movie_name as movieName
		  from movies
		 where flag = #{flag}
	</select>

	<insert id="insertBox" parameterType="Box">
		insert into box_order(movie_id, audience, audience_date)
		values(#{movieId}, #{audience}, #{audienceDate})
	</insert>
	
	<update id="updateBox" parameterType="Box">
		update box_order
		   set audience = #{audience},
		       audience_date = #{audienceDate}
		 where movie_id = #{movieId}
	</update>
	
	<resultMap id="movieMap" type="Movie">
		<result column="movie_id" property="movieId"/>
		<result column="movie_name" property="movieName"/>
		<result column="eng_title" property="engTitle"/>
		<result column="release_date" property="releaseDate"/>
		<result column="runtime" property="runtime"/>
		<result column="certificate" property="certificate"/>
		<result column="story" property="story"/>
	</resultMap>

	
	<select id="infoMovie" parameterType="int" resultMap="movieMap">
		select *
		  from movies
		 where movie_id = #{movieId}		
	</select>
	
	<select id="infoGenre" parameterType="int" resultType="String">
		select genre
		  from genres
		 where movie_id = #{movieId}
	</select>
	
	
	<resultMap id="orderMovie" type="Movie">
		<result column="movie_id" property="movieId"/>
		<result column="movie_name" property="movieName"/>
	</resultMap>
	
	<select id="boxMovie" resultMap="orderMovie">
		select * 
		  from movies, box_order 
		 where movies.movie_id = box_order.movie_id and 
		 		to_date(release_date)+ 30 > sysdate
		 		 and sysdate > movies.RELEASE_DATE  
	</select>
	
	<resultMap type="Box" id="boxMap">
		<result column="movie_id" property="movieId"/>
		<result column="audience" property="audience"/>
		<result column="audience_date" property="audienceDate"/>
	</resultMap>
	
	<select id="selectBox" parameterType="int" resultMap="boxMap">
		select * 
		  from box_order
		 where movie_id = #{movieId}
	</select>
	
	<select id="reserMovie" resultMap="orderMovie">
		select *
		  from movies, reser_order
		 where movies.MOVIE_ID = reser_order.MOVIE_ID
		 order by reser_order.R_NUMBERS desc
	</select>
	
	
	
	<select id="searchMovie" resultMap="movieMap">
		select * 
		  from movies 
		 where movie_name like '%'||#{name}||'%'
	</select>
	
	<resultMap type="Director" id="directorMap">
		<result column="director_name" property="directorName"/>
		<result column="profile" property="profile"/>
	</resultMap>
	
 	<select id="selectDirector" parameterType="int" resultMap="directorMap">
		select *
		  from directors
		 where movie_id = #{movieId}
	</select>
	
	<resultMap type="Actor" id="actorMap">
		<result column="actor_name" property="actorName"/>
		<result column="cast_name" property="castName"/>
		<result column="type" property="type"/>
		<result column="profile" property="profile"/>
	</resultMap>
	
	<select id="selectActor" parameterType="int" resultMap="actorMap">
		select *
		  from casts
		 where movie_id = #{movieId}
		 order by type desc
	</select>

	<select id="selectLeadActor" parameterType="int" resultMap="actorMap">
		select *
		  from casts
		 where movie_id = #{movieId}
		 		and type = '주연'
	</select>
	
	<select id="selectVideo" parameterType="int" resultType="Video">
		select name, route
		  from videos
		 where movie_id = #{movieId}
	</select>
	
	<select id="selectPhoto" parameterType="int" resultType="String">
		select route
		  from photos
		 where movie_id = #{movieId} and type is null
	</select>  
	
	<select id="selectThumbnail" parameterType="int" resultType="String">
		select route
		  from photos
		 where movie_id = #{movieId} and
		 	   type = 'thumbnail'
	</select> 
	
</mapper>